{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\my-app\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport noteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const [notes, setNotes] = useState([]);\n\n  // Fetch all notes from backend\n  const getNotes = async () => {\n    const response = await fetch(\"http://localhost:5000/api/notes/fetchallnotes\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(\"http://localhost:5000/api/notes/addnotes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n  // ...other note functions (addNote, deleteNote, etc.)...\n  const deleteNote = async id => {\n    await fetch(`http://localhost:5000/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    setNotes(notes.filter(note => note._id !== id));\n  };\n  const editNote = async (id, title, description, tag) => {\n    await fetch(`http://localhost:5000/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    setNotes(notes.map(note => note._id === id ? {\n      ...note,\n      title,\n      description,\n      tag\n    } : note));\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      getNotes,\n      addNote,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n_s(NoteState, \"GQLmJKrKSWtt27ULSmYSMpXke/c=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","notes","setNotes","getNotes","response","fetch","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","filter","_id","editNote","map","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/my-app/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport noteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  // Fetch all notes from backend\r\n  const getNotes = async () => {\r\n    const response = await fetch(\"http://localhost:5000/api/notes/fetchallnotes\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    setNotes(json);\r\n  };\r\n\r\n  const addNote = async (title, description, tag) => {\r\n  const response = await fetch(\"http://localhost:5000/api/notes/addnotes\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"auth-token\": localStorage.getItem(\"token\"),\r\n    },\r\n    body: JSON.stringify({ title, description, tag }),\r\n  });\r\n  const note = await response.json();\r\n  setNotes(notes.concat(note));\r\n};\r\n  // ...other note functions (addNote, deleteNote, etc.)...\r\nconst deleteNote = async (id) => {\r\n  await fetch(`http://localhost:5000/api/notes/deletenote/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"auth-token\": localStorage.getItem(\"token\"),\r\n    },\r\n  });\r\n  setNotes(notes.filter((note) => note._id !== id));\r\n};\r\n\r\nconst editNote = async (id, title, description, tag) => {\r\n  await fetch(`http://localhost:5000/api/notes/updatenote/${id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"auth-token\": localStorage.getItem(\"token\"),\r\n    },\r\n    body: JSON.stringify({ title, description, tag }),\r\n  });\r\n  setNotes(\r\n    notes.map((note) =>\r\n      note._id === id ? { ...note, title, description, tag } : note\r\n    )\r\n  );\r\n};\r\n\r\nreturn (\r\n  <noteContext.Provider value={{ notes, setNotes, getNotes, addNote, deleteNote, editNote }}>\r\n    {props.children}\r\n  </noteContext.Provider>\r\n);\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}